{
    // Place your snippets for C++ here. Each snippet is defined under a snippet name and has a prefix, body and 
    // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
    // same ids are connected.
    // Example:
    "Accept cpp header": {
          "prefix": "algorithm",
          "body": [
                "#include<cstdio>",
                "#include<cstring>",
                "#include<algorithm>",
                "#include<iostream>",
                "#include<string>",
                "#include<vector>",
                "#include<stack>",
                "#include<bitset>",
                "#include<cstdlib>",
                "#include<cmath>",
                "#include<set>",
                "#include<list>",
                "#include<deque>",
                "#include<map>",
                "#include<queue>",
                "#include<unordered_map>",
                "#include<unordered_set>",
                "using namespace std;",
                "",
                "#define FF0(i,n) for(int i = 0 ; i < n ; i ++)",
                "#define FF1(i,n) for(int i = 1 ; i <= n ; i ++)",
                "",
                "typedef long long ll;",
                "const int INF = 0x7fffffff;",
                "",
                "",
                "int main()",
                "{",
                "    $1",
                "    return 0;",
                "}",
          ],
          "description": "print header messages for algorithm"
    },      
    "freopen": {
          "prefix": "ffopen",
          "body": [
                "freopen(\"$1\", \"r\", stdin);",
                "freopen(\"$2\", \"w\", stdout);",
                "",
                "$3",
                "",
                "fclose(stdin);",
                "fclose(stdout);"
          ],
          "description": "freopen and fclose"
    }
}